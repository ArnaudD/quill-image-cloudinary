{
  "version": 3,
  "sources": ["../src/index.js", "../src/ResponsiveImageBlot.js"],
  "sourcesContent": ["import Quill from \"quill\";\n\nimport ResponsiveImage from \"./ResponsiveImageBlot\";\n\nQuill.register(ResponsiveImage);\n\nconst defaultOptions = {\n  preloadMediaLibrary: true,\n};\n\nclass QuillImageCloudinary {\n  constructor(quill, options) {\n    this.quill = quill;\n    this.options = { ...defaultOptions, ...options };\n    this.range = null;\n\n    if (this.options.srcset) {\n      this.options.srcset = this.options.srcset.sort((a, b) => a - b);\n    }\n\n    if (typeof this.options.getAuthOption !== \"function\") {\n      console.warn(\"'getAuthOption' function is missing in quill-image-cloudinary config.\");\n    }\n\n    var toolbar = this.quill.getModule(\"toolbar\");\n    toolbar.addHandler(\"image\", this.selectImage.bind(this));\n\n    if (this.options.preloadMediaLibrary) {\n      this.loadMediaLibrary();\n    }\n  }\n\n  loadMediaLibrary() {\n    if (!this.ml) {\n      const otherOptions = this.options.srcset\n        ? {\n            default_transformations: this.options.srcset.map((size) => [\n              {\n                width: size,\n                crop: \"scale\",\n                fetch_format: \"auto\",\n                quality: \"auto\",\n                ...(this.options.defaultTransformations || []),\n              },\n            ]),\n          }\n        : undefined;\n\n      const init = async () =>\n        window.cloudinary.createMediaLibrary(\n          {\n            ...(await this.options.getAuthOption()),\n            ...otherOptions,\n          },\n          {\n            insertHandler: this.fileChanged.bind(this),\n            multiple: false,\n            resource_type: \"image\",\n          }\n        );\n\n      this.ml = init();\n    }\n\n    return this.ml;\n  }\n\n  async selectImage() {\n    this.range = this.quill.getSelection();\n    const ml = await this.loadMediaLibrary();\n    ml.show(this.options.getShowOption ? await this.options.getShowOption() : undefined);\n  }\n\n  fileChanged({ assets: [image] }) {\n    const { srcset } = this.options;\n\n    const range = this.range;\n    this.quill.insertEmbed(\n      range.index,\n      \"cloudinary-image\",\n      {\n        src: (srcset ? image.derived[srcset.length - 1] : image).secure_url,\n        srcset: srcset\n          ? image.derived\n              .map(({ secure_url }, index) => `${secure_url} ${srcset[index]}w`)\n              .join(\", \")\n          : undefined,\n      },\n      \"user\"\n    );\n    range.index++;\n    this.quill.setSelection(range, \"user\");\n  }\n}\n\nwindow.QuillImageCloudinary = QuillImageCloudinary;\nexport default QuillImageCloudinary;\n", "import Quill from \"quill\";\n\nconst EmbedBlot = Quill.import(\"blots/embed\");\n\nconst ATTRIBUTES = [\"alt\", \"height\", \"width\", \"src\", \"srcset\", \"loading\", \"style\", \"data-align\"];\n\nclass ResponsiveImage extends EmbedBlot {\n  static create(value) {\n    const node = super.create();\n    if (typeof value === \"string\") {\n      node.setAttribute(\"src\", value);\n    } else {\n      Object.keys(value).forEach((attribute) => {\n        if (ATTRIBUTES.includes(attribute) && value[attribute]) {\n          node.setAttribute(attribute, value[attribute]);\n        }\n      });\n    }\n\n    node.setAttribute(\"loading\", \"lazy\");\n\n    return node;\n  }\n\n  static formats(domNode) {\n    return ATTRIBUTES.reduce((formats, attribute) => {\n      if (domNode.hasAttribute(attribute)) {\n        formats[attribute] = domNode.getAttribute(attribute);\n      }\n      return formats;\n    }, {});\n  }\n\n  static register() {\n    if (/Firefox/i.test(navigator.userAgent)) {\n      setTimeout(() => {\n        // Disable image resizing in Firefox\n        document.execCommand(\"enableObjectResizing\", false, false);\n      }, 1);\n    }\n  }\n\n  static value(domNode) {\n    return {\n      src: domNode.getAttribute(\"src\"),\n      srcset: domNode.getAttribute(\"srcset\"),\n      alt: domNode.getAttribute(\"alt\"),\n    };\n  }\n\n  format(name, value) {\n    if (ATTRIBUTES.includes(name)) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nResponsiveImage.blotName = \"cloudinary-image\";\nResponsiveImage.tagName = \"IMG\";\nResponsiveImage.className = \"ql-cloudinary-image\";\n\nexport default ResponsiveImage;\n"],
  "mappings": "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",
  "names": []
}
